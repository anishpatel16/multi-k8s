apiVersion: apps/v1
kind: Deployment #object type
metadata:
    name: server-deployment #name of object we going to create. so, deployment will have name of client-deployment
    labels:
        component: web
spec:
    replicas: 3 #number of different pods that it will create. Create 1 pod using template shown below. 
    selector: #
        matchLabels:
            component: server #component inside application we waorking on is server

    template: #listing out configuration of every single pod created by deployment object. Every pod created will have label as web and image as multi-client
        metadata:
            labels:
                component: server #label must match up with the selector tag
        spec:
            containers:
                - name: server
                  image: stephengrider/multi-server #image of docker id. we have to add enviornment variable here
                  ports: 
                        - containerPort: 5000
--- #use --- to divide the files
apiVersion: v1
kind: Service
metadata:
    name: server-cluster-ip-service
spec:
    type: ClusterIP
    selector: #what set of pods it must provide access to? it should provide access to multi-service pod.
        component: server #in server-deployment we have label server so, we use that for access
    ports:
        - port: 5000 #The port property is going to be how other pods or other objects inside of our cluster are going toaccess the pod that we are kind of 
        #governing access to and the target port is going to be the port on the target pod that we are providing access to.better to keep 3000 for port
        #multiserver uses 5000 for deployment side in the image
          targetPort: 5000

    